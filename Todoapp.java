/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package scoel;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.JTable;
import javax.swing.table.TableModel;

/**
 *
 * @author saman
 */
public class Todoapp extends javax.swing.JFrame {

    /**
     * Creates new form Todoapp
     */
    public Todoapp() {
        initComponents();
         setData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        del = new java.awt.Button();
        edit = new java.awt.Button();
        imp = new java.awt.Button();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        textfield = new javax.swing.JTextField();
        add = new java.awt.Button();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        del.setActionCommand("add");
        del.setBackground(new java.awt.Color(255, 0, 51));
        del.setFont(new java.awt.Font("Lucida Bright", 1, 18)); // NOI18N
        del.setForeground(new java.awt.Color(255, 255, 255));
        del.setLabel("Delete");
        del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delActionPerformed(evt);
            }
        });

        edit.setActionCommand("add");
        edit.setBackground(new java.awt.Color(255, 51, 255));
        edit.setFont(new java.awt.Font("Lucida Bright", 1, 18)); // NOI18N
        edit.setForeground(new java.awt.Color(255, 255, 255));
        edit.setLabel("Edit");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        imp.setActionCommand("add");
        imp.setBackground(new java.awt.Color(255, 204, 51));
        imp.setFont(new java.awt.Font("Lucida Bright", 1, 18)); // NOI18N
        imp.setForeground(new java.awt.Color(255, 255, 255));
        imp.setLabel("Important");
        imp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                impActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(153, 0, 153));
        jPanel1.setForeground(new java.awt.Color(102, 0, 102));

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 2, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("To Do List");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(221, 221, 221)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        textfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textfieldActionPerformed(evt);
            }
        });

        add.setActionCommand("add");
        add.setBackground(new java.awt.Color(255, 0, 153));
        add.setFont(new java.awt.Font("Lucida Bright", 1, 18)); // NOI18N
        add.setForeground(new java.awt.Color(255, 255, 255));
        add.setLabel("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null}
            },
            new String [] {
                "Task"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(del, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(edit, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(imp, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 81, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(imp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(del, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textfieldActionPerformed
 private void setData(){
     DefaultTableModel dtm=(DefaultTableModel) jTable1.getModel();
   int rc=dtm.getRowCount();
   while(rc--!=0){
       dtm.removeRow(0);
   }
    try{
        FileInputStream f=new FileInputStream("task.txt");  
        Scanner sc=new Scanner(f);
      while(true){
          try{
            Vector row=new Vector();
            row.add(sc.nextLine());
            dtm.addRow(row);
        }catch(Exception ex){
        break;
 
        }
      }
      sc.close();
      f.close();
    } catch(Exception ex){
        
    }
 }


    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
              try{
            FileOutputStream f=new FileOutputStream("task.txt",true);
            PrintStream p=new PrintStream(f);
            String task=textfield.getText();
            p.println(task);
             JOptionPane.showMessageDialog(null,"Task Added Successfully!");
            setData();
            p.close();
            f.close();
           
     textfield.setText(null);       
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null,ex.getMessage());
        }
    }//GEN-LAST:event_addActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        // TODO add your handling code here:
    int selectedRow = jTable1.getSelectedRow();

    if (selectedRow != -1) {
        String task = (String) jTable1.getValueAt(selectedRow, jTable1.getSelectedColumn());

        // Show an input dialog box to get the edited task
        String editedTask = JOptionPane.showInputDialog(null, "Edit Task", task);

        if (editedTask != null) { // User clicked OK
            editedTask = editedTask.trim(); // Trim the edited task

            // Update the table with the edited task
            jTable1.setValueAt(editedTask, selectedRow, jTable1.getSelectedColumn());

            // Update the file with the edited task
            try {
                File file = new File("task.txt");
                BufferedReader reader = new BufferedReader(new FileReader(file));
                List<String> lines = new ArrayList<>();

                // Read all lines from the file
                String line;
                while ((line = reader.readLine()) != null) {
                    lines.add(line);
                }
                reader.close();

                // Update the line corresponding to the selected row with the edited task
                lines.set(selectedRow, editedTask);

                // Write the updated lines back to the file
                FileWriter writer = new FileWriter(file);
                for (String updatedLine : lines) {
                    writer.write(updatedLine + "\n");
                }
                writer.close();

                JOptionPane.showMessageDialog(null, "Task Edited Successfully!");
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
    } else {
        JOptionPane.showMessageDialog(null, "Please select a task to edit.");
    }
    }//GEN-LAST:event_editActionPerformed

    private void impActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_impActionPerformed
        // TODO add your handling code here:
       DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
    int rowCount = dtm.getRowCount();

    if (rowCount > 0) {
        // Create a list to store task data
        List<String> tasks = new ArrayList<>();

        // Retrieve task data from the table
        for (int i = 0; i < rowCount; i++) {
            String task = (String) dtm.getValueAt(i, 0);
            tasks.add(task);
        }

        // Prioritize tasks
        for (int i = 0; i < rowCount; i++) {
            String task = tasks.get(i);
            String priorityString = JOptionPane.showInputDialog(null, "Enter the priority level for the task \"" + task + "\":", "Task Priority", JOptionPane.PLAIN_MESSAGE);

            // Validate priority level
            try {
                int priority = Integer.parseInt(priorityString);
                tasks.set(i, task + " (Priority: " + priority + ")");
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Invalid priority level. Please enter a valid integer value.");
                return;
            }
        }

        // Sort tasks by priority
        tasks.sort((task1, task2) -> {
            int priority1 = extractPriority(task1);
            int priority2 = extractPriority(task2);
            return Integer.compare(priority1, priority2);
        });

        // Update the table with the prioritized and sorted tasks
        for (int i = 0; i < rowCount; i++) {
            String task = tasks.get(i);
            dtm.setValueAt(task, i, 0);
        }

        // Update the file with the prioritized and sorted tasks
        try {
            File file = new File("task.txt");
            FileWriter writer = new FileWriter(file);

            for (String task : tasks) {
                writer.write(task + "\n");
            }

            writer.close();

            JOptionPane.showMessageDialog(null, "Tasks Prioritized and Sorted Successfully!");
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    } else {
        JOptionPane.showMessageDialog(null, "No tasks found.");
    }

    }//GEN-LAST:event_impActionPerformed
private int extractPriority(String task) {
    int startIndex = task.lastIndexOf("Priority: ") + "Priority: ".length();
    int endIndex = task.lastIndexOf(')');
    String priorityString = task.substring(startIndex, endIndex).trim();
    return Integer.parseInt(priorityString);
}
    private void delActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delActionPerformed
        // TODO add your handling code here:

        int ri= jTable1.getSelectedRow();
        if(ri!=-1){
            String task=(String)jTable1.getValueAt(ri,0);

            try{
                FileOutputStream f=new FileOutputStream("temp.txt");
                PrintStream p=new PrintStream(f);
                FileInputStream ff=new FileInputStream("task.txt");
                Scanner sc=new Scanner(ff);
                while(true){
                    try{
                        String s=sc.nextLine();
                        if(!task.equalsIgnoreCase(s)){
                            p.println(s);
                        }
                    }catch(Exception ex){
                        break;

                    }
                }

                p.close();
                sc.close();
                f.close();
                ff.close();

                File file=new File("task.txt");
                file.delete();
                File tempFile=new File("temp.txt");
                File newFile=new File("task.txt");
                tempFile.renameTo(newFile);

                setData();
            }catch(Exception ex){
                JOptionPane.showMessageDialog(null,ex.getMessage());
            }
        }else{
            JOptionPane.showMessageDialog(null, "Please select the task");
        }
    }//GEN-LAST:event_delActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Todoapp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Todoapp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Todoapp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Todoapp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Todoapp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button add;
    private java.awt.Button del;
    private java.awt.Button edit;
    private java.awt.Button imp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField textfield;
    // End of variables declaration//GEN-END:variables
}
